openapi: "3.0.3"
info: 
   version: 0.0.1
   title: User Managment Module
   description: User Managment Module
     
paths:
  /users:
    get:
        description: Get all users 
        operationId: GetAllUsers
        parameters:
        - name: firstName
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: integer
            format: int64
        responses:
          '200':
           description: OK
           content:
             application/json:
              schema:
                $ref: '#/components/schemas/UserNew'
          default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
    post:
       description: Creates a new user in the store.
       operationId: addUsers
       requestBody: 
         description: User to add to the store
         required: true 
         content: 
          application/json:
           schema:
            $ref: '#/components/schemas/User'
       responses:
         '201':
           description: Created
           content:
            application/json:
             schema:
              $ref: '#/components/schemas/User'
         '409':
           description: Conflict
           content:
             application/json:
              schema:
                $ref: '#/components/schemas/Error'
         '422':
            description: Unprocessable entity
            content:
              application/json:
                schema:
                 $ref: '#/components/schemas/Error'
         '500':
            description: Internal server error
            content:
             application/json:
              schema:
               $ref: '#/components/schemas/Error'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
  /users/{id}: 
    get:
      description: Get one user
      operationId: find user by id
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
         description: unexpected error
         content:
           application/json:
             schema:
               $ref: '#/components/schemas/Error'
               
    put:
      description: Creates a new user in the store.
      operationId: addUser
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: integer
            format: int64
      requestBody: 
          description: User to add to the store
          required: true 
          content: 
            application/json:
             schema:
               $ref: '#/components/schemas/User'
      responses:
         '200':
          description: OK
          content:
           application/json:
             schema:
               $ref: '#/components/schemas/User'
         '500':
          description: Internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Error'
         default:
           description: unexpected error
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
       '204':
         description: user deleted
       default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
    schemas:
      UserNew:
        allOf:
          - $ref: '#/components/schemas/User'
          - type: object
        required:
          - id
        properties:
           id:
            type: integer
      User:
          type: object
          required:
           - id
           - firstName
           - lastName
           - email
           - mobilePhone
           - createdAt
           - modifiedAt
          properties:
           id: 
            type: integer
            maxLength: 255
            format: read-only
         
           firstName:
            type: string
            maxLength: 255   
         
           lastName:
            type: string
            maxLength: 255
         
           email:
            type: string
            maxLength: 255

           mobilePhone:
            type: string
            maxLength: 255 

           createdAt:
            type: string
            format: date-time 

           modifiedAt:  
            type: string
            format: date-time 
      Error: 
       type: object
       required:
       - code
       - message
       properties:
        code:
         type: string
         format: int64
        message:
         type: string